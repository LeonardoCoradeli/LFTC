import React from 'react';
import { CheckCircle, XCircle } from 'lucide-react';

interface ValidationResultProps {
  isValid: boolean | null;
  testString: string;
  generatedStrings: string[];
}

function ValidationResult({ isValid, testString, generatedStrings }: ValidationResultProps) {
  if (isValid === null || !testString) return null;

  return (
    <div className="space-y-4">
      <div
        className={`flex items-center gap-2 p-4 rounded-lg ${
          isValid ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'
        }`}
      >
        {isValid ? (
          <>
            <CheckCircle className="w-5 h-5" />
            <span>The string belongs to the grammar</span>
          </>
        ) : (
          <>
            <XCircle className="w-5 h-5" />
            <span>The string does not belong to the grammar</span>
          </>
        )}
      </div>

      {generatedStrings.length > 0 && (
        <div className="bg-gray-50 p-4 rounded-lg">
          <h4 className="text-sm font-medium text-gray-700 mb-2">
            Valid strings generated by this grammar:
          </h4>
          <div className="text-sm text-gray-600">
            {generatedStrings.slice(0, 10).map((str, index) => (
              <code key={index} className="inline-block bg-white px-2 py-1 rounded border mr-2 mb-2">
                {str}
              </code>
            ))}
            {generatedStrings.length > 10 && (
              <span className="text-gray-500">
                and {generatedStrings.length - 10} more...
              </span>
            )}
          </div>
        </div>
      )}
    </div>
  );
}

export default ValidationResult;